{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/todo/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AACnE,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAQhD,IAAM,IAAI,GAAV,MAAM,IAAK,SAAQ,UAAU;IAA7B;;QAqBL,eAAU,GAAe,EAAE,CAAC;IA6C9B,CAAC;IA3CC,OAAO,CAAC,GAAU;QAChB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YACrB,GAAG,CAAC,cAAc,EAAE,CAAC;YACrB,OAAO;SACR;QAED,IAAI,CAAC,UAAU,GAAG;YAChB,GAAG,IAAI,CAAC,UAAU;YAClB,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE;SAC/C,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QAEtB,GAAG,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IAED,cAAc,CAAC,IAAc;QAC3B,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAES,MAAM;QACd,OAAO,IAAI,CAAA;;QAEP,IAAI,CAAC,UAAU,CAAC,GAAG,CACnB,CAAC,IAAI,EAAE,EAAE,CACP,IAAI,CAAA;;sBAEQ,QAAQ,CAAC;YACf,WAAW,EAAE,IAAI;YACjB,SAAS,EAAE,IAAI,CAAC,UAAU;SAC3B,CAAC;uBACO,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;;gBAEtC,IAAI,CAAC,KAAK;;gBAEV,CACT;+CACwC,IAAI,CAAC,OAAO;;yBAElC,IAAI,CAAC,OAAO;;WAE1B,CAAC;IACV,CAAC;;AAhEM,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;GAclB,CAAC;AAGF;IADC,KAAK,CAAC,UAAU,CAAC;mCACO;AAGzB;IADC,QAAQ,EAAE;wCACiB;AArBjB,IAAI;IADhB,aAAa,CAAC,cAAc,CAAC;GACjB,IAAI,CAkEhB;SAlEY,IAAI","sourcesContent":["import { css, html, LitElement } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\ntype TodoItem = {\n  value: string;\n  isComplete: boolean;\n};\n\n@customElement(\"todo-element\")\nexport class Todo extends LitElement {\n  static styles = css`\n    .todo-item {\n      moz-user-select: none;\n      -khtml-user-select: none;\n      -webkit-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n      margin-bottom: 3px;\n      color: #777;\n    }\n\n    .completed {\n      text-decoration: line-through;\n    }\n  `;\n\n  @query(\"#newitem\")\n  input!: HTMLInputElement;\n\n  @property()\n  _listItems: TodoItem[] = [];\n\n  addItem(evt: Event) {\n    if (!this.input.value) {\n      evt.preventDefault();\n      return;\n    }\n\n    this._listItems = [\n      ...this._listItems,\n      { value: this.input.value, isComplete: false },\n    ];\n    this.input.value = \"\";\n\n    evt.preventDefault();\n  }\n\n  toggleComplete(item: TodoItem) {\n    item.isComplete = !item.isComplete;\n    this.requestUpdate();\n  }\n\n  protected render(): unknown {\n    return html`<div>\n      <h1>TODO</h1>\n      ${this._listItems.map(\n        (item) =>\n          html`<ul>\n            <li\n              class=${classMap({\n                \"todo-item\": true,\n                completed: item.isComplete,\n              })}\n              @click=${() => this.toggleComplete(item)}\n            >\n              ${item.value}\n            </li>\n          </ul>`\n      )}\n      <form style=\"margin-top: 10px\" @submit=${this.addItem}>\n        <input id=\"newitem\" aria-label=\"New item\" />\n        <button @click=${this.addItem}>Add</button>\n      </form>\n    </div>`;\n  }\n}\n"]}